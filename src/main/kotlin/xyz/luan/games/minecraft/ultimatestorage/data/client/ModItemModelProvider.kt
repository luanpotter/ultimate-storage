package xyz.luan.games.minecraft.ultimatestorage.data.client

import net.minecraft.block.Block
import net.minecraft.data.DataGenerator
import net.minecraftforge.client.model.generators.ItemModelProvider
import net.minecraftforge.client.model.generators.ModelFile.UncheckedModelFile
import net.minecraftforge.common.data.ExistingFileHelper
import xyz.luan.games.minecraft.ultimatestorage.UltimateStorageMod.MOD_ID
import xyz.luan.games.minecraft.ultimatestorage.registry.BlockRegistry


class ModItemModelProvider(
    generator: DataGenerator,
    existingFileHelper: ExistingFileHelper,
) : ItemModelProvider(generator, MOD_ID, existingFileHelper) {
    private val itemGenerated by lazy { getExistingFile(mcLoc("item/generated")) }

    override fun registerModels() {
        registerItem("wrench")

        registerItem("base_upgrade")
        registerItem("capacity_upgrade")
        registerItem("filter_upgrade")

        // block items
        BlockRegistry.tiers.forEach { registerBlockModel(it.block()) }
    }

    private fun registerItem(name: String) {
        getBuilder(name).parent(itemGenerated).texture("layer0", "item/gen/${name.replace("_", "-")}")
    }

    private fun registerBlockModel(block: Block) {
        val path = block.registryName!!.path
        getBuilder(path).parent(UncheckedModelFile(modLoc("block/$path")))
    }
}